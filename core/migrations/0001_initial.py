# Generated by Django 2.2.6 on 2019-11-14 11:22

from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CreateOpenSpace',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('image', models.ImageField(upload_to='identify_open_space')),
            ],
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('code', models.IntegerField(blank=True, null=True)),
                ('boundary', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='Municipality',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('hlcit_code', models.CharField(blank=True, max_length=100, null=True)),
                ('boundary', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326)),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='municipality', to='core.District')),
            ],
        ),
        migrations.CreateModel(
            name='OpenSpace',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('current_land_use', models.TextField(blank=True, null=True)),
                ('catchment_area', models.CharField(blank=True, max_length=200, null=True)),
                ('ownership', models.CharField(blank=True, max_length=100, null=True)),
                ('elevation', models.DecimalField(blank=True, decimal_places=10, max_digits=15, null=True)),
                ('access_to_site', models.CharField(blank=True, max_length=100, null=True)),
                ('special_feature', models.TextField(blank=True, null=True)),
                ('address', models.CharField(blank=True, max_length=200, null=True)),
                ('ward', models.IntegerField(blank=True, null=True)),
                ('capacity', models.DecimalField(blank=True, decimal_places=10, max_digits=25, null=True)),
                ('total_area', models.DecimalField(blank=True, decimal_places=10, max_digits=25, null=True)),
                ('usable_area', models.DecimalField(blank=True, decimal_places=10, max_digits=25, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='space')),
                ('maps', models.ImageField(blank=True, null=True, upload_to='maps')),
                ('location', django.contrib.gis.db.models.fields.PointField(blank=True, geography=True, null=True, srid=4326)),
                ('polygons', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326)),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='district', to='core.District')),
                ('municipality', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='municipality', to='core.Municipality')),
            ],
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('code', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('description', models.TextField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='resource_image')),
                ('audio', models.FileField(blank=True, null=True, upload_to='audio')),
                ('video', models.FileField(blank=True, null=True, upload_to='video')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('publication', models.FileField(blank=True, null=True, upload_to='publication')),
                ('category', models.IntegerField(choices=[(0, 'Plans and Policies'), (1, 'Research'), (2, 'Multimedia')], default=0)),
                ('document_type', models.IntegerField(choices=[(0, 'publication'), (1, 'audio'), (2, 'video')], default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Slider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('title_nep', models.CharField(blank=True, max_length=200, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='slider')),
            ],
        ),
        migrations.CreateModel(
            name='SuggestedUse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('open_space', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='suggested_use', to='core.OpenSpace')),
            ],
        ),
        migrations.CreateModel(
            name='Services',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('open_space', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='core.OpenSpace')),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('message', models.TextField(blank=True, null=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('urgency', models.IntegerField(choices=[(0, 'High'), (1, 'Medium'), (2, 'Low')], default=0)),
                ('status', models.IntegerField(choices=[(0, 'Pending'), (1, 'Replied')], default=0)),
                ('image', models.ImageField(blank=True, null=True, upload_to='space')),
                ('location', django.contrib.gis.db.models.fields.PointField(blank=True, geography=True, null=True, srid=4326)),
                ('open_space', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='report', to='core.OpenSpace')),
                ('reported_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reported_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='openspace',
            name='province',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='open_province', to='core.Province'),
        ),
        migrations.CreateModel(
            name='NearbyAmenities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('open_space', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='amenities', to='core.OpenSpace')),
            ],
        ),
        migrations.CreateModel(
            name='HealthFacility',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('location', django.contrib.gis.db.models.fields.PointField(blank=True, geography=True, null=True, srid=4326)),
                ('amenity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='health_facility', to='core.NearbyAmenities')),
            ],
        ),
        migrations.CreateModel(
            name='EducationFacility',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('location', django.contrib.gis.db.models.fields.PointField(blank=True, geography=True, null=True, srid=4326)),
                ('amenity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='education_facility', to='core.NearbyAmenities')),
            ],
        ),
        migrations.AddField(
            model_name='district',
            name='province',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='district', to='core.Province'),
        ),
    ]
